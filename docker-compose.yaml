services:
  postgresql:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=orders
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=user
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"

  elasticsearch:
    image: elasticsearch:8.8.0
    environment:
      - discovery.type=single-node
      - validate_after_inactivity=0
      - max_open_files=65536
      - max_content_length_in_bytes=100000000
      - transport.host=elasticsearch
      - xpack.security.enabled=false
    volumes:
      - $HOME/app:/var/app
    ports:
      - "9200:9200"
      - "9300:9300"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  connect:
    container_name: debezium
    image: debezium/connect:2.7.3.Final
    ports:
      - 8083:8083
    links:
      - kafka
      - postgresql
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - CONFIG_STORAGE_TOPIC=debezium_connect_config
      - OFFSET_STORAGE_TOPIC=debezium_connect_offset
      - STATUS_STORAGE_TOPIC=debezium_connect_status
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true